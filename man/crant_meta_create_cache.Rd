% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coconat.R
\name{crant_meta_create_cache}
\alias{crant_meta_create_cache}
\title{Create or refresh cache of CRANTb meta information}
\usage{
crant_meta_create_cache(use_seatable = FALSE, return = FALSE)
}
\arguments{
\item{use_seatable}{Whether to build CRANTb meta data from the \code{cell_info} CAVE table
(production) or our internal seatable (development). Both require different types of authenticated
access, for details see \code{crantr} documentation.}

\item{return}{Logical; if \code{TRUE}, return the cache tibble/invisible.}
}
\value{
Invisibly returns the cache (data.frame) if \code{return=TRUE}; otherwise invisibly \code{NULL}.
}
\description{
\code{crant_meta_create_cache()} builds or refreshes an in-memory cache of CRANTb metadata
for efficient repeated lookups. You can choose the data source using \code{use_seatable}.
The main accessor function \code{\link[=crant_meta]{crant_meta()}} will always use the most recently created cache.
}
\details{
CRANTb meta queries can be slow; caching avoids repeated computation/database access.
Whenever labels are updated, simply rerun this function to update the cache.
}
\examples{
\dontrun{
#' # Requires authenticated access to CRANTb CAVE
crant_meta_cache(use_seatable=FALSE)

crant_meta_create_cache(use_seatable=TRUE) # create cache
## CRANTbTABLE_TOKEN must be set, see crantr package
result <- crant_meta() # use cache

# use cache to quickly make plot
library(coconatfly)
register_crant_coconat()
cf_cosine_plot(cf_ids('/type:NSC', datasets = c("crant", "flywire")))
}
}
